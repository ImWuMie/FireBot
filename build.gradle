plugins {
    id 'java'
    id 'org.jetbrains.kotlin.jvm' version '1.7.21'
    id 'maven-publish'
    id 'com.github.johnrengelman.shadow' version '7.1.2'
}

group 'dev.wumie'
version '1.0-SNAPSHOT'

sourceCompatibility = targetCompatibility = JavaVersion.VERSION_17
archivesBaseName = 'FireBot'

repositories {
    mavenLocal()
    maven {
        name = 'Ladysnake Mods'
        url = 'https://ladysnake.jfrog.io/artifactory/mods'
    }
    maven {
		name = "meteor-maven"
		url = "https://maven.meteordev.org/releases"
	}
    maven {
        name = "meteor-maven-snapshots"
        url = "https://maven.meteordev.org/snapshots"
    }
    maven {
        name = "vram"
        url = "https://maven.vram.io//"
    }

    maven {
        name = "seedfinding-maven"
        url "https://maven.seedfinding.com/"
    }
    maven {
        name = "seedfinding-maven-snapshots"
        url "https://maven-snapshots.seedfinding.com/"
    }
    maven {
        name = "modrinth"
        url = "https://api.modrinth.com/maven"

        content {
            includeGroup "maven.modrinth"
        }
    }
    maven { url 'https://jitpack.io' }
    maven { url "https://maven.shedaniel.me/" }
    maven { url "https://maven.latticg.com/" }
    maven { url 'https://repo.viaversion.com/' }
    maven { url = "https://maven.terraformersmc.com/releases/" }
    mavenCentral()
}

configurations {
    // include libraries
    implementation.extendsFrom(library)
    shadow.extendsFrom(library)
}

dependencies {
    library "org.java-websocket:Java-WebSocket:1.5.3"
    // LomBok
    library 'org.projectlombok:lombok:1.18.26'
    // Others
    library 'com.google.code.gson:gson:2.10.1'
    library 'org.apache.commons:commons-lang3:3.12.0'
    library 'org.apache.logging.log4j:log4j-api:2.20.0'
    library 'org.apache.logging.log4j:log4j-core:2.20.0'
    library 'commons-codec:commons-codec:1.16.0'

}

jar {
    manifest.attributes(
            'Manifest-Version': 1.0,
            'Main-Class': 'dev.wumie.FireQQ',
    )
}

shadowJar {
    configurations = [ project.configurations.shadow ]

    dependencies {
        exclude {
            it.moduleGroup == "org.slf4j"
        }
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}

build.dependsOn shadowJar